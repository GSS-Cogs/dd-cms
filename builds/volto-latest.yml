steps:

  # "kaniko" is a build runner whose sole job is to build
  # container images optimised for use on k8s.
  # destination is just where on our infrastructure we store
  # these images.
  # by default it looks for Dockerfile in the repo root and builds
  # that though other locations can be specified.
  # For why we build the image twice with different tags, see
  # the cicd README.
  - name: 'gcr.io/kaniko-project/executor:latest'
    args:
      - >-
        --destination=${_IMAGE_REPOSITORY}/volto-test:latest
      - >-
        --destination=${_IMAGE_REPOSITORY}/volto-test:$SHORT_SHA
      - context=dir://volto
      - Dockerfile=Dockerfile-test

  # Builds Volto-test latest container from the artifact registry and Volto tests are run using container volume
  - name: 'gcr.io/cloud-builders/docker'
    dir:
      - '/workspace/volto/'
    args:
      - run
      - -v
      - /workspace:/workspace
      - >-
        --destination=${_IMAGE_REPOSITORY}/volto-test:latest
      - /bin/bash
      - -c 
      - cp -R /workspace/volto/src/. /app/src/ && cp /workspace/volto/babel.config.js /app/babel.config.js && yarn test-ci

  - name: 'gcr.io/kaniko-project/executor:latest'
    args:
      - >-
        --destination=${_IMAGE_REPOSITORY}//volto:latest
      - >-
        --destination=${_IMAGE_REPOSITORY}/volto:$SHORT_SHA

  # This uses the kubectl runner (a container designed to interact
  # with k8s via kubectl) to update the image defined in the k8s deployment
  # on the cluster in question - k8s will notice this and green/blue 
  # bounce the pod(s) from there.

# Deploy climate-change
  - name: gcr.io/cloud-builders/kubectl
    env:
      - CLOUDSDK_COMPUTE_REGION=${_REGION}
      - CLOUDSDK_CONTAINER_CLUSTER=${_K8S_CLUSTER_NAME}
    args:
      - set
      - image
      - deployment/volto-climate-change
      - '--namespace=cms'
      - >-
        volto-climate-change=${_IMAGE_REPOSITORY}/volto:$SHORT_SHA

# Deploy vawg
  - name: gcr.io/cloud-builders/kubectl
    env:
      - CLOUDSDK_COMPUTE_REGION=${_REGION}
      - CLOUDSDK_CONTAINER_CLUSTER=${_K8S_CLUSTER_NAME}
    args:
      - set
      - image
      - deployment/volto-vawg
      - '--namespace=cms'
      - >-
        volto-vawg=${_IMAGE_REPOSITORY}/volto:$SHORT_SHA

# Deploy dcms
  - name: gcr.io/cloud-builders/kubectl
    env:
      - CLOUDSDK_COMPUTE_REGION=${_REGION}
      - CLOUDSDK_CONTAINER_CLUSTER=${_K8S_CLUSTER_NAME}
    args:
      - set
      - image
      - deployment/volto-dcms
      - '--namespace=cms'
      - >-
        volto-dcms=${_IMAGE_REPOSITORY}/volto:$SHORT_SHA
timeout: 7200s  # 2 hours !!
options:
  - machine_type = "E2_HIGHCPU_32"